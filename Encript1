spawn(function()
local message = Instance.new("Message",workspace)
message.Text = "Loading ..."
wait(2)
message:Destroy()
end)                 task.wait(2)



local Key = "Y"
local Toggle = false


game:GetService("UserInputService").InputBegan:Connect(function(keyobject, variable)
  if keyobject.KeyCode == Enum.KeyCode[Key] and not variable then
      Toggle = not Toggle
  end
end)


game:GetService('RunService').Stepped:connect(function()
  if Toggle then
game:GetService("ReplicatedStorage").Signals.RemoteEvents.GetWoolRemote:FireServer(14, "189.75978088378906, 2.295492649078369, 271.87420654296875")
  end
end)

local Key = "Y"
local Toggle = false


game:GetService("UserInputService").InputBegan:Connect(function(keyobject, variable)
  if keyobject.KeyCode == Enum.KeyCode[Key] and not variable then
      Toggle = not Toggle
  end
end)


game:GetService('RunService').Stepped:connect(function()
  if Toggle then
game:GetService("ReplicatedStorage").Signals.RemoteEvents.GetWoolRemote:FireServer(17,"6.130366325378418, 2.1910297870635986, 318.9978332519531")
  end
end)

local Key = "Y"
local Toggle = false


game:GetService("UserInputService").InputBegan:Connect(function(keyobject, variable)
  if keyobject.KeyCode == Enum.KeyCode[Key] and not variable then
      Toggle = not Toggle
  end
end)


game:GetService('RunService').Stepped:connect(function()
  if Toggle then
local args = {
    [1] = 16,
    [2] = nil --[[Vector3]]
}

game:GetService("ReplicatedStorage").Signals.RemoteEvents.GetWoolRemote:FireServer(unpack(args))

  end
end)

local Key = "Y"
local Toggle = false


game:GetService("UserInputService").InputBegan:Connect(function(keyobject, variable)
  if keyobject.KeyCode == Enum.KeyCode[Key] and not variable then
      Toggle = not Toggle
  end
end)


game:GetService('RunService').Stepped:connect(function()
  if Toggle then
local args = {
    [1] = 15,
    [2] = nil --[[Vector3]]
}

game:GetService("ReplicatedStorage").Signals.RemoteEvents.GetWoolRemote:FireServer(unpack(args))

  end
end)

local Key = "Y"
local Toggle = false


game:GetService("UserInputService").InputBegan:Connect(function(keyobject, variable)
  if keyobject.KeyCode == Enum.KeyCode[Key] and not variable then
      Toggle = not Toggle
  end
end)


game:GetService('RunService').Stepped:connect(function()
  if Toggle then
local args = {
    [1] = 13,
    [2] = nil --[[Vector3]]
}

game:GetService("ReplicatedStorage").Signals.RemoteEvents.GetWoolRemote:FireServer(unpack(args))

  end
end)

local Key = "Y"
local Toggle = false


game:GetService("UserInputService").InputBegan:Connect(function(keyobject, variable)
  if keyobject.KeyCode == Enum.KeyCode[Key] and not variable then
      Toggle = not Toggle
  end
end)


game:GetService('RunService').Stepped:connect(function()
  if Toggle then
local args = {
    [1] = 12,
    [2] = nil --[[Vector3]]
}

game:GetService("ReplicatedStorage").Signals.RemoteEvents.GetWoolRemote:FireServer(unpack(args))

  end
end)




   task.wait(0.2136927291732847738282000000201110100019822)
   
   
spawn(function()
local message = Instance.new("Message",workspace)
message.Text = "Success"
wait(5)
message:Destroy()
end)        task.wait(0.513692729173281110100019822)


spawn(function()
while true do
game.StarterGui:SetCore("SendNotification", {
	Title = "By Liver zMods";
	Text = "Created by a Brazilian!";
  Icon = "rbxthumb://type=Asset&id=11935866652&w=150&h=150";
        Duration = 30;
})
task.wait(45.7)
end
end)

spawn(function()
while true do task.wait(2.5)
game.Players.LocalPlayer.Character.Humanoid.JumpPower = 62
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 41
end
end)                 task.wait(0.15)

spawn(function()

local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TextButton = Instance.new("TextButton")
local Frame2 = Instance.new("Frame")
local TextButton2 = Instance.new("TextButton")
ScreenGui.Parent = game.CoreGui
Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(0,255,0)
Frame.Position = UDim2.new(0, 0, 0.40, 30)
Frame.Size = UDim2.new(0, 50, 0, 24.7)
Frame.Active = true Frame.Draggable = true TextButton.Parent = Frame
TextButton.BackgroundColor3 = Color3.fromRGB(0,255,0)
TextButton.Size = UDim2.new(0, 50, 0, 24.7)
TextButton.Font = Enum.Font.Sarpanch
TextButton.Text = "ON"
TextButton.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton.TextSize = 30.940
TextButton.MouseButton1Click:connect(function()
game.StarterGui:SetCore("SendNotification", {
	Title = "OFF";
	Text = "Success"; 
	Duration = 0.5; })
Frame.Visible = false Frame2.Visible = true
local vim = game:service("VirtualInputManager")
vim:SendKeyEvent(true, "Y", false, game) end)
Frame2.Parent = ScreenGui
Frame2.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
Frame2.Position = UDim2.new(0, 0, 0.40, 30)
Frame2.Size = UDim2.new(0, 50, 0, 24.7)
Frame2.Active = true
Frame2.Draggable = true
TextButton2.Parent = Frame2
TextButton2.BackgroundColor3 = Color3.fromRGB(255,0,0)
TextButton2.Size = UDim2.new(0, 50, 0, 24.7)
TextButton2.Font = Enum.Font.Sarpanch
TextButton2.Text = "OFF"
TextButton2.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton2.TextSize = 30.940
TextButton2.MouseButton1Click:connect(function()
game.StarterGui:SetCore("SendNotification", {
    Title = "TURNS ON";
	Text = "Success"; 
	Duration = 0.5; })
Frame2.Visible = false
Frame.Visible = true 
local vim = game:service("VirtualInputManager")
vim:SendKeyEvent(true, "Y", false, game) end)
Frame.Parent.Active = true
Frame.Parent.Draggable = true

end)
